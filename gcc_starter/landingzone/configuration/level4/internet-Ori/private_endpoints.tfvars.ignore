private_endpoints = {
  pep1 = { # Key of the virtual network
    lz_key = "" # "solution_accelerators"  # Landingzone key when deployed in remote landing zone
    vnet_key    = "" # "gcci-rg-agency-vnets" # "vnet_01"
    # vnet_id not used
    # vnet_id    = "/subscriptions/e22a351f-db36-4a02-9793-0f2189d5f3ab/resourceGroups/gcci-rg-agency-vnets/providers/Microsoft.Network/virtualNetworks/gcci-vnet-internet" 
    #subnet_keys = ["subnet_01"]
    subnet_keys = []
    subnet_ids = ["/subscriptions/e22a351f-db36-4a02-9793-0f2189d5f3ab/resourceGroups/gcci-rg-agency-vnets/providers/Microsoft.Network/virtualNetworks/gcci-vnet-internet/subnets/cep-snet-app-pep-internet"]
    # subnet_id not used
    # subnet_id = "/subscriptions/e22a351f-db36-4a02-9793-0f2189d5f3ab/resourceGroups/gcci-rg-agency-vnets/providers/Microsoft.Network/virtualNetworks/gcci-vnet-internet/subnets/cep-snet-app-pep-internet"
    # resource_group_key = ""
    # resource_group_key = "" # Key of resource group of the vnet

    storage_accounts = {
      sa2 = {
        # name = ""                        # Name of the private endpoint
        # lz_key = ""                      # Key of the landingzone where the storage account has been deployed.
        resource_group_key = "storage_accounts_re1"          # Key of the resource group where the private endpoint will be created. Default to the vnet's resource group
        # tags
        private_service_connection = {
          name              = "psc-sa2"
          subresource_names = ["blob", "table"]
          # request_message = ""
          # is_manual_connection = [true|false]
        }

        ## not defined mean it will inherit from virtual network
        # private_dns = {
        #   zone_group_name = "default"
        #   # lz_key          = ""   # If the DNS keys are deployed in a remote landingzone
        #   keys = ["dns1"]
        #   # ids = []    # List of DNS resource ids
        # }
      }
    }

    # private endpoint only can execute after the function app exists, else will cause error.
    function_apps = {
      f1 = {
        # name = ""                        # Name of the private endpoint
        # lz_key = ""                      # Key of the landingzone where the storage account has been deployed.
        resource_group_key = "function_app_re1"          # Key of the resource group where the private endpoint will be created. Default to the vnet's resource group
        # tags
        private_service_connection = {
          name              = "psc-f1"
          subresource_names = ["sites"]
          # request_message = ""
          # is_manual_connection = [true|false]
        }

        # private_dns = {
        #   zone_group_name = "default"
        #   # lz_key          = ""   # If the DNS keys are deployed in a remote landingzone
        #   keys = ["dns1"]
        #   # ids = []    # List of DNS resource ids
        # }
      }

      f2 = {
        # name = ""                        # Name of the private endpoint
        # lz_key = ""                      # Key of the landingzone where the storage account has been deployed.
        resource_group_key = "function_app_re1"          # Key of the resource group where the private endpoint will be created. Default to the vnet's resource group
        # tags
        private_service_connection = {
          name              = "psc-f2"
          subresource_names = ["sites"]
          # request_message = ""
          # is_manual_connection = [true|false]
        }

        # private_dns = {
        #   zone_group_name = "default"
        #   # lz_key          = ""   # If the DNS keys are deployed in a remote landingzone
        #   keys = ["dns1"]
        #   # ids = []    # List of DNS resource ids
        # }
      }      
    }

  }
}
