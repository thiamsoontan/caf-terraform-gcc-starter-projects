public_ip_addresses = {
  pip_ingress_firewall = {
    name               = "pip-ingress-firewall"
    resource_group_key = "networking_firewall_ingress_re1"
    sku                = "Standard" # must be 'Standard' SKU
    # Standard SKU Public IP Addresses that do not specify a zone are zone redundant by default.
    allocation_method       = "Static"
    ip_version              = "IPv4"
    idle_timeout_in_minutes = "4"
  }
}

azurerm_firewalls = {
  firewall_ingress = {
    name                = "firewall-ingress"
    resource_group_key  = "networking_firewall_ingress_re1"

     # add the resource group name to resolve the issue of subnet rg different from firewall rg
    # TODO: subnet resource group name - input as variable for code generation
    # ** firewall MUST be in the same resource group as VNet and Subnet AzureFirewallSubnet
    resource_group_name = "gcci-rg-agency-vnets" # the resource group name of the subnet
    
    subnet_id = "/subscriptions/6f035180-4066-42f0-b0fa-5fbc1ae67500/resourceGroups/gcci-rg-agency-vnets/providers/Microsoft.Network/virtualNetworks/gcci-vnet-ingress/subnets/AzureFirewallSubnet"

    
    sku_tier            = "Premium"
    zones               = [3] # [1, 2, 3]
    firewall_policy_key = "policy1"
    public_ips = {
      ip1 = {
        name          = "ip1-pip-ingress-firewall"
        public_ip_key = "pip_ingress_firewall"

        #vnet_key      = "vnet1"
        # subnet_key    = "AzureFirewallSubnet"
        # subnet_id = "/subscriptions/{{subscription_id}}/resourceGroups/ignite-rg-dev-env-re1/providers/Microsoft.Network/virtualNetworks/ignite-vnet-hub-ingress-re1/subnets/AzureFirewallSubnet"
        subnet_id = "/subscriptions/6f035180-4066-42f0-b0fa-5fbc1ae67500/resourceGroups/gcci-rg-agency-vnets/providers/Microsoft.Network/virtualNetworks/gcci-vnet-ingress/subnets/AzureFirewallSubnet"


        # lz_key = "lz_key"
      }
      # ip2 = {
      #   name = "pip2"
      #   public_ip_id = "azure_resource_id"
      #   subnet_id = "azure_resource_id"
      # }
    }
  }
}

azurerm_firewall_policies = {
  policy1 = {
    name               = "firewall_policy"
    resource_group_key = "networking_firewall_ingress_re1"
    region             = "region1"
    sku                = "Premium"

    #   threat_intelligence_mode = "Alert"

    #   threat_intelligence_allowlist = {
    #     ip_addresses = []
    #     fqdns        = []
    #   }

    #   intrusion_detection = {
    #     mode                = "Alert"
    #     signature_overrides = {
    #       id    = ""
    #       state = ""
    #     }
    #     traffic_bypass      = {
    #       name                  = ""
    #       protocol              = ""
    #       description           = ""
    #       destination_addresses = ""
    #       destination_ip_groups = ""
    #       destination_ports     = ""
    #       source_addresses      = ""
    #       source_ip_groups      = ""
    #     }
  }
}

azurerm_firewall_policy_rule_collection_groups = {
  group1 = {
    #firewall_policy_id = "Azure Resource ID"
    firewall_policy_key = "policy1"
    name                = "example-fwpolicy-rcg"
    priority            = 500

    # application_rule_collections = {
    #   rule1 = {
    #     name     = "app_rule_collection1"
    #     priority = 500
    #     action   = "Deny"
    #     rules = {
    #       rule1 = {
    #         name = "app_rule_collection1_rule1"
    #         protocols = {
    #           1 = {
    #             type = "Http"
    #             port = 80
    #           }
    #           2 = {
    #             type = "Https"
    #             port = 443
    #           }
    #         }
    #         source_addresses  = ["10.0.0.1"]
    #         destination_fqdns = ["*.microsoft.com"]
    #       }
    #     }
    #   }
    # }

    # network_rule_collections = {
    #   group1 = {
    #     name     = "network_rule_collection1"
    #     priority = 400
    #     action   = "Deny"
    #     rules = {
    #       rule1 = {
    #         name                  = "network_rule_collection1_rule1"
    #         protocols             = ["TCP", "UDP"]
    #         source_addresses      = ["10.0.0.1"]
    #         destination_addresses = ["192.168.1.1", "192.168.1.2"]
    #         destination_ports     = ["80", "1000-2000"]
    #       }
    #     }
    #   }
    # }

    nat_rule_collections = {
      group1 = {
        name     = "nat_rule_collection1"
        priority = 300
        action   = "Dnat"
        rules = {
          rule1 = {
            name             = "nat_rule_collection1_rule1"
            protocols        = ["TCP"]
            source_addresses = ["*"]
            # destination_address = "192.168.1.1"
            destination_address_public_ip_key = "pip_ingress_firewall"
            destination_ports                 = ["443"]
            translated_address                = "172.16.0.4" # TODO: Add private ip of app gw
            translated_port                   = "443"
          }
        }
      }
    }
  }

}
